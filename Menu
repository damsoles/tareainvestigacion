//	/ Funciones o SubAlgitmo  del proyecto
// SubAlgoritmo menus del proyecto
Funcion opcion=presentarMenu(titulo,menu,lim)
	Definir opcion Como Caracter
	Definir pos Como Entero
	Borrar Pantalla
	Escribir titulo
	Para pos=0 Hasta lim-1 Con Paso 1 Hacer
		Escribir menu[pos]
	Fin Para
	Escribir "       Elija opción[1..",lim,"]" Sin Saltar
	leer opcion
FinFuncion

// Pide dos numeros y presenta el mayor de los dos
Funcion convierta_expresion() //1
	// Ejercicio 1. ESTRUCTURA SELECTIVA
	// ¿Siguiendo la prioridad de operadores, convierta a expresión matemática,
	// resuelva e indique en cuál tipo de variable almacenará el resultado de las
	// siguientes expresiones:
	// (5 + 3 * 2) + 9 > 3 * 5 * 14  MOD  3
	// 2 (4 ? 10 + 8)/2 36 *(1/2)
	// 260 / 12 + 54  MOD  3 ? 85  MOD  7
	// (48 < 2 * 3)  O   O  (2 * 7 < 12)
	// ((8 > 2)  O   O  (932 < 23) )  Y  4 == 2
	
	Definir resultado1, resultado4, resultado5 Como Logico
	definir resultado2, resultado3 como reales 
	definir opc como entero
	
	Escribir  " Escoge la opción que quieres que resuelva"
	Escribir  " 1. (5 + 3 * 2) + 9 > 3 * 5 * 14 % 3"
	Escribir  " 2. 2 (4 - 10 + 8)/2*36(1/2)"
	Escribir  " 3. 260 / 12 + 54 mod 3 - 85 mod 7"
	Escribir  " 4. (48 < 2 * 3) O (2 * 7 < 12)"
    Escribir  " 5. ((8 > 2) O (932 < 23) ) Y 4 == 2"
	leer opc
	
	
	Segun opc Hacer
		1:
			resultado1= ((5 + 3 * 2) + 9) > (3 * 5 * 14 % 3) 
			Escribir " El resultado de la siguiente expresion es: ", resultado1
			Escribir " La variable en la que se almacenara este resultado es de tipo booleana"
			
		2:
			resultado2 = 2*(4-10+8)/2*36*(1/2)
			Escribir " El resultado de la siguiente expresion es: ",  resultado2
			Escribir " La variable en la que se almacenara este resultado sera de tipo numerica"
		3: 
			resultado3 = 260 / 12 + 54 % 3 - 85 % 7
			Escribir " El resultado de la siguiente expresion es: ", resultado3
			Escribir " La variable en la que se almacenara este resultado sera de tipo numerica"
		4:
			resultado4= (48 < 2 * 3) O (2 * 7 < 12) 
			Escribir " El resultado de la siguiente expresion es: ",  resultado4
			Escribir " La variable en la que se almacenara este resultado es de tipo booleana"
		5:
			resultado5 = ((8 > 2) O (932 < 23) ) Y 4 == 2
			Escribir " El resultado de la siguiente expresion es: ",  resultado5
			Escribir " La variable en la que se almacenara este resultado sera de tipo booleana"
	FinSegun
	
FinFuncion


funcion calcula_operaciones()//2
	//Ejercicio_2
	//Dados dos (2) números calcule la suma, resta, multiplicación, división y módulo.
	Definir a,b,x como real
	Escribir "Escribe dos numeros"
	leer a,b
	x = 0
	
	escribir "Elige una opcion "
	Escribir "1 = suma"
	Escribir "2 = resta"
	Escribir "3 = multiplicacion "
	Escribir "4 = division"
	Escribir "5 = módulo"
	Escribir "6 = salir"
	leer x
	
	segun x
		1:
			si x = 1 Entonces
				Escribir "La suma de ",a," + ",b," = ",a+b
			FinSi
		2:
			si x = 2 Entonces
				Escribir "La resta de ",a," - ",b," = ",a-b
			FinSi
			
		3:
			si x = 3 Entonces
				Escribir "La multiplicacion de ",a," x ",b," = ",a*b
			FinSi
			
		4: 
			si x = 4 Entonces
				Escribir "La division de ",a," / ",b," = ",a/b
			FinSi
			
		5:  
			si x = 5 Entonces
				Escribir "EL módulo de ",a," mod ",b," = " a mod b
			FinSi
			
		De Otro Modo: 
			si x = 6 Entonces
				Escribir  "Haz finalizado el programa"
			FinSi
			
	FinSegun
FinFuncion


funcion calcule_la_resolvente()//3
	Definir a, b, c, discriminante, x1, x2 como Real
    Escribir "Ingrese el valor de a:"
    Leer a
    Escribir "Ingrese el valor de b:"
    Leer b
    Escribir "Ingrese el valor de c:"
    Leer c
    discriminante <- b^2 - 4*a*c
    Si discriminante > 0 Entonces
        x1 <- (-b + Raiz(discriminante)) / (2*a)
        x2 <- (-b - Raiz(discriminante)) / (2*a)
        Escribir "Las soluciones son x1= ", x1
		escribir " x2= ", x2
    Sino 
		Si discriminante = 0 Entonces
			x1 <- -b / (2*a)
			Escribir "La solución es x = ", x1
		Sino
			Escribir "La ecuación no tiene soluciones reales."
			
		FinSi
	FinSi
FinFuncion


funcion calcular_hipotenusa()//4
	//Dados dos (2) lados de un triángulo en cm, calcular la hipotenusa del mismo.
	// Entrada:se solicita al usuario que ingrese los valores de lado1 y lado2 
	//Proceso : . Luego se calcula la hipotenusa utilizando la fórmula del teorema de Pitágoras
	//salida : muestran los resultados
	Definir lado1, lado2, hipotenusa como Real
    Escribir "Ingrese el valor del primer lado del triángulo:"
    Leer lado1
    Escribir "Ingrese el valor del segundo lado del triángulo:"
    Leer lado2
	
    hipotenusa <- Raiz(lado1^2 + lado2^2)
	
    Escribir "La hipotenusa del triángulo es:", hipotenusa
FinFuncion



funcion par_impar()//5
	//	entrada: definimos una variable 
	//	proceso: n mod 2=0 es par ; n mod 2=1 es impar
	//	salida: presentamos 0 si es par y 1 si es impar
	definir n1 como entero 
	escribir "ingrese un numero "
	leer n1
	Si n1%2==0 Entonces 
		escribir "0" 
	SiNo
		escribir "1"  
	Fin Si
FinFuncion
Funcion imprimir_valor_binario()//6
	//	entrada: pedimos al usuario que ingrese un numero binario 
	//	proceso: calculamos el numero binario 
//	salida: presentamos el numero binario
	definir binario como cadena
	definir k,suma,pt,i como entero 
	definir tx como caracter
	escribir "Ingrese un número binario de 4 dígitos:"
	leer binario
	
	si longitud(binario) > 4 entonces
		escribir "El número binario debe tener 4 dígitos para poder ejecutarse "
	sino
		k=0
		suma=0
		Para i<-1 Hasta longitud(binario) Con Paso 1 Hacer
			tx=Subcadena(binario,Longitud(binario)-i ,longitud(binario)-i)
			pt=2 ^ k *ConvertirANumero(tx)
			suma=suma+pt
			k=k+1
		Fin Para
		escribir "el numero binario a decimal es de :", suma
	fin si
FinFuncion
funcion  imprimir_cantidades()//7
	//Bosquejo 
	//Entrada: Un número de cuatro dígitos ingresado por el usuario.
	//Proceso: 	Definimos variables como reales
	//Separamos el número en unidades de mil, centenas, decenas y unidades utilizando operaciones matemáticas.
	//Salida: Mostrar por separado los dígitos obtenidos
	Definir num, unidades_de_mil, centenas, decenas, unidades como reales
	// Definimos las variables num, unidades_de_mil, centenas, decenas y unidades como números reales para almacenar los valores.
	Escribir "Ingrese un número de cuatro dígitos:"
	Leer num
	// Solicitamos al usuario que ingrese un número de cuatro dígitos y lo almacenamos en la variable num.
	// Obtener los dígitos
	unidades_de_mil = (num / 1000) 
	// Para obtener las unidades de mil, dividimos el número entre 1000 y luego multiplicamos por 1000 para eliminar los dígitos de las centenas, decenas y unidades.
	centenas = (num % 1000) / 100
	// Para obtener las centenas, utilizamos el operador de módulo (%) para obtener el residuo de la división del número entre 1000, luego dividimos ese resultado entre 100 para eliminar los dígitos de las unidades y decenas.
	decenas = (num % 100) / 10
	// Para obtener las decenas, utilizamos el operador de módulo (%) para obtener el residuo de la división del número entre 100, luego dividimos ese resultado entre 10 para eliminar el dígito de las unidades.
	unidades = num % 10
	// Para obtener las unidades, utilizamos el operador de módulo (%) para obtener el residuo de la división del número entre 10, que nos dará directamente el dígito de las unidades.
	// Imprimir los dígitos por separado
	Escribir "Unidades de mil: ", unidades_de_mil
	Escribir "Centenas: ", centenas 
	Escribir "Decenas: ", decenas * 10
	Escribir "Unidades: ", unidades
	// Mostramos los dígitos por separado, cada uno con su variable.
	
FinFuncion


funcion verificar_caracter()//8
	//Bosquejo
	//Entrada: caracter ingresado por el usuario
	//Proceso: Definimos variables como caracteres
	//Solicitar al usuario que ingrese un carácter.
	//Verificar el tipo de carácter ingresado, utilizando si- Entonces
	//Mostrar el resultado al usuario.
	//Salida: se imprime el resultado verificando si el tipo de carácter es un: dígito, consonante o carácter especial.
    Definir caract Como Carácter // Se define la variable "caract" para almacenar el carácter ingresado.
    Escribir "Ingrese un carácter: "// Se solicita al usuario que ingrese un carácter.
    Leer caract // Se lee el carácter ingresado y se almacena en la variable "caract".
    Si caract >= "0" y caract <= "9" Entonces // Si el carácter está entre "0" y "9", es un dígito.
        Escribir "El carácter ingresado es un dígito."
    Sino
        Si (caract >= "a" y caract <= "z") o (caract >= "A" y caract <= "Z") Entonces// Si el carácter está entre "a" y "z" (minúsculas) o "A" y "Z" (mayúsculas), es una letra.
            Si caract = "a" o caract = "e" o caract = "i" o caract = "o" o caract = "u" o caract = "A" o caract = "E" o caract = "I" o caract = "O" o caract = "U" Entonces // Si no el carácter es una vocal.
                Escribir "El carácter ingresado es una vocal."
            Sino
                Escribir "El carácter ingresado es una consonante."
            FinSi
        Sino // el carácter es una consonante.
            Escribir "El carácter ingresado es un carácter especial."
        FinSi
    FinSi
FinFuncion

funcion  verificar_caracter_mayor()//9
	Definir caracter1,caracter2 Como Caracter
	Escribir "Digite el primer caracter:"
	leer caracter1
	Escribir "Digite el segundo caracter:"
	leer caracter2
	Si (caracter1<caracter2) entonces 
		Escribir "El caracter 1 es menor que caracter 2"
	FinSi
	Si (caracter1=caracter2) entonces 
		Escribir "El caracter 1 es igual al caracter 2"
	FinSi
	si (caracter1>caracter2) Entonces
		Escribir "El caracter 1 es mayor que caracter 2"
	FinSi
FinFuncion


funcion  presentar_mayuscula_minuscula()//10
	//	Dada una frase cualquiera presentarla en mayúscula y minuscula
	//Entrada: Se escribe la frase que desea presentar 
	//Proceso: Se lee la frase que presento 
	//Salida: Se imprime la frase en maysucula y en minuscula en pantalla
	Definir frase como cadena 
	Escribir "Digite una frase:"
	leer frase 
	Escribir "En mayusculas quedaria:"
	Escribir mayusculas(frase)
	
	Escribir "En minuscula quedaria:"
	Escribir Minusculas(frase)
FinFuncion





funcion año_bisiesto()//1
	//bosquejo
	//ENTRADA: año, mes, dia
	//PROCESO: Verificar si el mes y el día ingresados son válidos.
	//Si son válidos, verificar si el año es bisiesto:
	//Si el año es divisible exactamente entre 400, o
	//Si el año es divisible exactamente entre 4 pero no entre 100 es bisiesto.
	//Mostrar un mensaje indicando si el año es bisiesto o no.
	//SALIDA: Mensaje indicando si el año ingresado es bisiesto o no.
	
	Definir año, mes, dia como Entero  // Se definen las variables para almacenar el año, mes y día
    Escribir "Ingrese el año:"  // Se solicita al usuario que ingrese el año
    Leer año  // Se lee el valor ingresado y se almacena en la variable año
	
    Escribir "Ingrese el mes:"  // Se solicita al usuario que ingrese el mes
    Leer mes  // Se lee el valor ingresado y se almacena en la variable mes
	
    Escribir "Ingrese el día:"  // Se solicita al usuario que ingrese el día
    Leer dia  // Se lee el valor ingresado y se almacena en la variable dia
	
    Si (mes < 1) o (mes > 12) Entonces  // Se verifica si el mes ingresado es válido (entre 1 y 12 meses que contiene el año)
        Escribir "El mes ingresado es inválido." // Muestra un mensaje de error si el mes es inválido
    Sino
        Si (dia < 1) o (dia > 31) Entonces  // Se verifica si el día ingresado es válido (entre 1 y 31 dias que contiene el mes)
            Escribir "El día ingresado es inválido." // Muestra un mensaje de error si el mes es inválido
        Sino
            Si ((año % 400 = 0) o (año % 4 = 0)) y (año % 100 <> 0) Entonces  // Se verifica si el año es bisiesto según las premisas 
				//dividimos los años para 400, años para 4 y años para 100 para saber exactamente si son bisiestos
                Escribir "El año " , año,  " es un año bisiesto."  // Muestra un mensaje si el año es bisiesto
            Sino
                Escribir "El año " , año,  " no es un año bisiesto."  // Muestra un mensaje si el año no es bisiesto
            FinSi
        FinSi
    FinSi
FinFuncion


funcion escapicua()//2
	//Bosquejo 
	//Entrada: Se solicita al usuario que ingrese un número de 5 dígitos.
	//Proceso: Se verifica si el número ingresado cumple con la condición de tener 5 dígitos.
	//Si el número cumple con la condición, se descompone en sus dígitos individuales.
	//Se comparan los dígitos extremos y los dígitos centrales para determinar si el número es capicúa.
	//Salida: Imprimimos resultados, si es capicua, si no es o si no tiene 5 digitos
	Definir num, dig1, dig2, dig3, dig4, dig5 Como Entero // Definimos variables
	
	Escribir "Ingrese un número de 5 dígitos"
	Leer num // Almacenamos los dígitos en la variable num
	
	Si num >= 10000 y num <= 99999 Entonces // Verifica si el número tiene 5 dígitos
		
		dig1 = trunc(num / 10000) mod 10 
		dig2 = trunc(num / 1000) mod 10
		dig3 = trunc(num / 100) mod 10
		dig4 = trunc(num / 10) mod 10
		dig5 = num mod 10
		
		Si dig1 = dig5 y dig2 = dig4 Entonces // Verifica si los dígitos extremos y los dígitos centrales son iguales
			Escribir "El número es Capicúa" // Imprime que el número es capicúa
		SiNo
			Escribir "El número no es Capicúa" // Imprime que el número no es capicúa
		Fin Si
		
	SiNo
		Escribir "El número ingresado no tiene 5 dígitos" // Imprime que el número no cumple con el requisito de tener 5 dígitos
	Fin Si
FinFuncion



funcion equivalente_minutos()//3
	// ESTRUCTURA CONDICIONALES
	//Ejercicio 3: Para un valor entero positivo que representa una cantidad en segundos, 
	//indicar su equivalente en minutos, horas y días.
	//                         ****** BOSQUEJO******
	// ENTRADA: seg(leer)
	// PROCESO: - utilizaremos  si-Entonces
	//          - Calcular: Minutos: Segundos / 60, Horas: Minutos / 3600, Días: Horas /86400
	// SALIDA:  Se mostrara los resultados en sus respectivas unidades.
	
	Definir seg, minutos, horas, dias Como enteros
	Escribir "Ingrese una cantidad de segundos: "
	Leer seg
	
	Si seg < 0 Entonces
		Escribir " Error! Debe indicar un numero positivo"
	SiNo
		si seg > 1 Entonces
			minutos = trunc(seg/60)
			horas = trunc(seg/3600)
			dias = trunc(seg/86400)
			
		FinSi
	FinSi
	Escribir "Equivalente en segundos:", seg
	Escribir "Equivalente en minutos: ", minutos
	Escribir "Equivalente en horas: ", horas
	Escribir "Equivalente en días: ", dias	

FinFuncion


funcion determinar_son_iguales()//4
	//	Dados tres números enteros positivos A, B y C, ¿Determine si son iguales? ¿cuál de ellos es
	//		elmayor? y ¿cuál es el segundo mayor?
	definir a,b,c,sgm como entero 
	escribir "digite los valores de a,b,c"
	leer a,b,c
	Si a = b y a=c  Entonces
		Escribir "so iguales "
	SiNo
		Si a>b y a>c Entonces
			escribir"el numero ",a," es mayor "
		SiNo
			Si b >a y  b > c Entonces
				escribir "el numero ",b, " es mayor "
			SiNo
				Si c > a y c > b Entonces
					escribir "el numero ",c, " es mayor"
					
					
				Fin Si
			Fin Si
		Fin Si
	Fin Si
	Si (a>=b y a<=c ) o  (a<=b y a>=c) Entonces
		escribir a," segundo mayor"
	SiNo
		Si (b>=a y b<=c) o (b<=a y b >=c) entonces
			escribir b," segundo mayor"
		SiNo
			Si (c>=a y c<=b) o (c<=a y c >=c) Entonces
				escribir c " segundo mayor"
			SiNo
				
			Fin Si
		Fin Si
	Fin Si
FinFuncion


funcion montoa_pagar()//5
	definir horas,minutos Como Entero
	definir respuesta1,respuesta2,resultado Como Real
	Escribir "Digite las horas"
	leer horas
	escribir "Digite los minutos"
	leer minutos
	si horas>=1 Entonces
		respuesta1 <- horas * 1.5
	FinSi
	si minutos<30 Entonces
		respuesta2 <- 0.50
	SiNo
		si minutos>=30 Entonces
			respuesta2 <- 1.5
			
		FinSi
		
	FinSi
	si minutos=0 Entonces
		resultado <- respuesta1
	SiNo
		si minutos>1 Entonces
			resultado <- respuesta1 + respuesta2
		FinSi
	FinSi
	Escribir "El valor a pagar es de $",resultado
	
FinFuncion


funcion peso()//6
	// Entrada: se solicita al usuario que ingrese el peso de la persona en libras 
	// la estatura de la persona en centímetros.
	// Proceso :  se calcula el IMC dividiendo el peso en kilogramos entre el cuadrado de la estatura en metros
	//(unas ves realizado todas las corverciones)
	// Salida: se muestra como salida el peso en kilogramos,
	// el valor del IMC y la categoría en la que fue clasificado el individuo
	
    Definir pesoLibras, estaturaCentimetros como Real
    Definir pesoKilogramos, estaturaMetros, imc como Real
    Definir categoria como Caracter
	
    Escribir "Ingrese el peso de la persona en libras:"
    Leer pesoLibras
	
    Escribir "Ingrese la estatura de la persona en centímetros:"
    Leer estaturaCentimetros
	
    // Conversión de libras a kilogramos
    pesoKilogramos <- pesoLibras * 0.453592
	
    // Conversión de centímetros a metros
    estaturaMetros <- estaturaCentimetros / 100
	
    // Cálculo del IMC
    imc <- pesoKilogramos / (estaturaMetros^2)
	
    // Clasificación del IMC
    Si imc < 16 Entonces
        categoria <- "Criterio de ingreso"
    Sino 
		Si imc <= 16.9 Entonces
			categoria <- "Infra peso"
		Sino 
			Si imc <= 18.4 Entonces
				categoria <- "Bajo peso"
			Sino 
				Si imc <= 24.9 Entonces
					categoria <- "Peso normal"
				Sino 
					Si imc <= 29.9 Entonces
						categoria <- "Sobrepeso"
					Sino
						Si imc <= 34.9 Entonces
							categoria <- "Obesidad pre-mórbida"
						Sino 
							Si imc <= 45 Entonces
								categoria <- "Obesidad mórbida"
							Sino
								categoria <- "Obesidad híper-mórbida"
							FinSi
							
							Escribir "Peso en kilogramos:", pesoKilogramos
							Escribir "Valor de IMC:", imc
						finsi
					finsi
				finsi
			finsi
		FinSi
	finsi 
	Escribir "Categoría:", categoria
FinFuncion


funcion año_2014()//7
	//Escriba un algoritmo que reciba una fecha (día y mes) correspondiente al año2014 e
	//imprima por pantalla el número de días que han pasado desde el 1 deEnero de 2014
	//hasta la fecha dada
	//entrada: pedimos al usuario ingresar una fecha del 2014, (dia/mes/2014)
	//proceso: creamos una condicion si entonces para saber que numero de mes va a ingresar el usuario
	// y asi poder saber cuantos dias tiene el mes ingresado luego sumamos diasanterior + dia - 1
	//salida: presentamos por pantalla el numeros dias dias que han pasado hasta la fecha ingresada 
	
	Definir dia, mes, dias_ant como Entero
	escribir "digita una fecha del año 2014 "
	Escribir "Ingrese el numero del día:"
	Leer dia
	dias_ant=0
	Escribir "Ingrese el numero del mes:"
	Leer mes
	Si mes > 1 Entonces
		dias_ant<- dias_ant + 31
	FinSi
	Si mes > 2 Entonces
		dias_ant <- dias_ant + 28
	FinSi
	Si mes > 3 Entonces
		dias_ant <- dias_ant + 31
	FinSi
	Si mes > 4 Entonces
		dias_ant<- dias_ant + 30
	FinSi
	Si mes > 5 Entonces
		dias_ant <- dias_ant + 31
	FinSi
	Si mes > 6 Entonces
		dias_ant<- dias_ant + 30
	FinSi
	Si mes > 7 Entonces
		dias_ant <- dias_ant + 31
	FinSi
	Si mes > 8 Entonces
		dias_ant <- dias_ant + 31
	FinSi
	Si mes > 9 Entonces
		dias_ant <- dias_ant + 30
	FinSi
	Si mes > 10 Entonces
		dias_ant <- dias_ant + 31
	FinSi
	Si mes > 11 Entonces
		dias_ant <- dias_ant + 30
	FinSi
	Si mes > 12 Entonces
		dias_ant <- dias_ant + 30
	FinSi
	dias_ant <- dias_ant + dia - 1
	
	
	Escribir "El número de días pasados desde el 1 de enero de 2014 hasta la fecha es: ",dias_ant," dias"
	
FinFuncion



Funcion mes_correspondiente()//8
	
	//	Solicitar un número entre el 1 y el 12 e imprimir el mes correspondiente a dicho número.
	definir num como entero 
	escribir "ingrese un numero para comprobar su mes "
	leer num 
	Segun num Hacer
		1:
			escribir "ENERO"
		2:
			ESCRIBIR"FEBRERO"
		3:
			ESCRIBIR"MARZO"
		4:
			Escribir "ABRIL"
		5:
			Escribir "MAYO"
		6:
			Escribir "JUNIO"
		7:
			ESCRIBIR"JULIO"
		8:
			ESCRIBIR"AGOSTO"
		9:
			ESCRIBIR"SEPTIEMBRE"
			
		10:
			ESCRIBIR"OCTUBRE"
		11:
			Escribir "NOVIEMBRE "
		12:
			ESCRIBIR"DICIEMBRE"
		De Otro Modo:
			Escribir "NUMERO INGRESADO NO CORRESPONDE A NINGUN MES DEL AÑO "
	Fin Segun
FinFuncion


funcion almacen_descuento()//9
	//Ejercicio 9.
	//En un almacén se hace un 20% de descuento a los clientes cuya compra supere los $1000,
	//se desea que realice un algoritmo el cual tome por entrada el monto apagar por el cliente
	//y arroje como salida el monto aplicando el descuento de ser necesario.
	
	//Entrada: Se pide al usuario digitar el precio 
	//Proceso: Se calcula el precio pir el descuento respectivo si el valor es mayor a 1000
	//Salida: Se arroja el resultado sea con el descuento o sin el 
	
	
	Definir descuento,precio,precio_final como reales 
	Escribir "Digite el precio a pagar:"
	Leer precio
	si precio>1000 Entonces
		descuento=precio*0.2
		precio_final=precio-descuento
		Escribir "Aplica descuento"
	sino 
		precio_final=precio
		Escribir "No se aplica descuento"
	FinSi
	Escribir "El precio final es de:",precio_final
FinFuncion


funcion operador_matematica()//10
	//Ejercicio 10
	//Dado dos números y un operador matemático(+,-,*,/,mod,div) realizar la suma, resta,
	//multiplicación, división, resto y división entera(div) de los dos números según el operador
	//ingresado.
	//Entrada: Se pide al usuario que digite los valores y operador 
	//Proceso: Se calcula los valores por el operador escogido 
	//Salida: Se muestran el resultado de los valores, operadores que escogio 
	
	Definir num1,num2,op como reales
	definir operador Como Caracter
	Escribir "Digite el primer numero:"
	leer num1
	Escribir "Digite el segundo numero:"
	Leer num2
	Escribir "Digite el operador (+,-,*,/,mod,div)"
	leer operador
	Si (operador="+") Entonces
		num1=num1+num2
		Escribir "El resultado es:",num1
	FinSi
	Si (operador="-") Entonces
		num1=num1-num2
		Escribir "El resultado es:",num1
	FinSi
	Si (operador="*") Entonces
		num1=num1*num2
		Escribir "El resultado es:",num1
	FinSi
	Si (operador="/") Entonces
		num1=num1/num2
		Escribir "El resultado es:",num1
	FinSi
	Si (operador="mod") Entonces
		num1=num1 mod num2
		Escribir "El resultado es:",num1
	FinSi
FinFuncion






funcion calcular_digito()//1
	//Dado un número entero N, calcular e informar al usuario cuántos dígitos tiene dicho
	//numero
	//Entrada: Se pide al usuario ingresar una cantidad entera 
	//Proceso: Se calcula cuantos digitos tiene el numero 
	//Salida: Se muestra en pantalla la cantidad de digitos finales 
	

		Definir contador,num como entero 
		Escribir "Digite un numero:"
		leer num
		contador=0
		mientras num>=1 hacer 
			num=trunc(num/10)
			contador=contador+1
		FinMientras
		Escribir "El numero ingresado tiene: ",contador

	
FinFuncion
funcion determinar_capicua()//2
	//Entrada: Pedir al usuario digitar un numero de 3 digitos 
	//Proceso: cacular el numero digitado
	//Salida: Mostrar en pantalla si el numero es capicua o no 
	
	Definir num,a,b como entero 
	Escribir "Digite un numero "
	leer num
	a=trunc(num/100)
	b=num mod 10
	
	si a==b Entonces
		Escribir "El numero digitado ",num," es capicua"
	sino
		Escribir "El numero digitado ",num," no es un numero capicua"
	FinSi
	
FinFuncion

funcion divisores_numero()//3
	//Ejercicio 3.
	//Escribir un algoritmo que presente los divisores de un numero
	//Entrada: Se digita un numero 
	//Proceso: Se busca los numeros divisibles para el numero seleccionado 
	//Salida: Se muestra en pantalla los numeros que son divisibles para el numero escogido
	
	
	Definir i como entero 
	definir num como reales 
	Escribir "Digite un numero:"
	leer num
	para i desde 1 hasta num Hacer
		si num mod i=0
			Escribir i," Es divisor de " ,num
		FinSi
	FinPara

FinFuncion
funcion suma_divisores()//4
	//	Escribir un algoritmo que presente la suma de los divisores de un numero
	Definir num, divisor, suma como Entero
	Escribir "Ingrese un número:"
	Leer num
	suma <- 0
	Para divisor <- 1 Hasta num hacer
		Si num MOD divisor = 0 Entonces
			suma <- suma + divisor
		FinSi
	FinPara
	Escribir "La suma de los divisores de ", num  " es: ", suma
	
FinFuncion


funcion cantidad_divisores()//5
	//	Escribir un algoritmo que presente la cantidad 
	//	de los divisores de un numero
	definir num,ct,i Como Entero
	escribir "digite un numero"
	leer num
	ct=0
	Para i<-1 Hasta num Con Paso 1 Hacer
		Si num%i==0 Entonces
			ct=ct+1
			
		finSi
	Fin Para
	Escribir "la cantidad de divisores de el numero ",num," es:",ct
FinFuncion


funcion numero_perfecto()//6
	//	Escribir un algoritmo que indique si un número es perfecto
	definir i,n,suma Como Entero
	escribir "ingrese un numero"
	leer n
	i=2
	suma=0
	mientras i <= n Hacer
		si n%i==0 Entonces
			suma=suma+trunc(n/i)
		FinSi
		i=i+1
	FinMientras
	si suma==n Entonces
		Escribir "el numero es perfecto"
	SiNo
		escribir"no es perfecto"
	FinSi

FinFuncion


funcion numero_primo()//7
	// ESTRUCTURA ITERATIVA
	//Ejercicio 7: Dado un número N determinar si es un número primo.
	//Nota: Un número primo es aquel que solo es divisible por 1(uno) y por el mismo
	
	//                       *******BOSQUEJO*****
	
	// ENTRADA: n(leer)
	// PROCESO: - se inicializa la variable x=1 
	//          - se inicializa el contador=0 
	//          - se utiliza el Mientras -Hacer
	//          - leemos el valor a ingresar con la función mod calculamos sus divisores 
	// SALIDA:  contador == 2 entonces el número es primo. De lo contrario, el número no es primo
	definir x,n,contador como entero 
	Escribir "Ingresa un numero" 
	Leer n
	x = 1
	contador = 0
	Mientras x <= n Hacer
		si n mod x == 0 Entonces
			contador = contador + 1
		FinSi
		x = x + 1 
	FinMientras
	si contador == 2 Entonces
		Escribir " El numero ",n," es primo"
	SiNo
		Escribir " El numero ",n," no es primo" 
	FinSi
FinFuncion


funcion n_factorial()//8
	
	//Ejercicio 8: Construya un programa que dado un valor entero N, 
	//haga el cálculo de la función factorial utilizando estructuras iterativas
	
	//                                  ******BOSQUEJO******
	
	// Entrada:  n(leer)
	// Proceso: - Se inicializa la variable factorial <- 1
	//          - se utiliza un bucle Para para iterar desde 1 hasta N, con un paso de 1 en cada iteración.
	//          - Dentro del bucle, se multiplica el valor actual de factorial por el valor actual de i y se almacena el resultado nuevamente en factorial.
	// Salida:   Mostrar en pantalla el resultado del factorial.
	
	
	Definir n, factorial, i como enteros
	factorial <- 1 
	i <- 1
	Escribir "Ingrese un numero"
	Leer n
	
	Para i <- 1 Hasta n Con Paso 1 Hacer
		Escribir "",i
		factorial= factorial*i
		
	FinPara
	Escribir " El factorial del número ",n," es = ",factorial


FinFuncion 


funcion representar_contraseña()//9
	//Ejercicio 9: Dado un número entero N que representa una contraseña y asumiendo que una
	//contraseña debe tener al menos 10 dígitos para ser segura, determine si la contraseña
	//ingresada por el usuario es correcta, de no serlo debe pedirla nuevamente hasta que tenga
	//los 10 (diez) dígitos solicitados y al ser correcta mostrar un mensaje de éxito al usuario, por
	//salida estándar.
	//                                           **bOSQUEJO****
	
	// ENTRADA: contraseña(leer)
	// PROCESO: - Pedir al usuario ingresar su contraseña, verificar si la contraseña tiene al menos 10 dígitos,
	//          - se utiliza el ciclo Mientras - Hacer 
	//          - se utiliza la funcion longitud para verfificar si la contraseña es menor que 10  digitos.
	//          - Si se cumple esta condición, se muestra un mensaje de error y se solicita nuevamente la contraseña.
	//          - Cuando se ingresa una contraseña válida (con al menos 10 dígitos), se sale del bucle y se muestra el mensaje.
	// SALIDA:  Si la contraseña cumple con los 10 dígitos, mostrar un mensaje de éxito al usuario.

	Definir contraseña como Cadena
	
	Escribir "Ingrese una contraseña debe tener al menos 10 dígitos:"
	Leer contraseña
	
	Mientras Longitud(contraseña) < 10 Hacer
		Escribir "La contraseña no cumple con los requisitos. Ingrese una contraseña válida:"
		Leer contraseña
	FinMientras
	
	Escribir "Contraseña válida. ¡Éxito!"
FinFuncion



funcion numero_terminada_0()//10
	
	//bosquejo
	//Entrada: Secuencia de números (terminada en 0)
	//Proceso:Inicializar mayor_ con un valor muy pequeño y menor_ con un valor muy grande.
	//Leer num.para almacenar los numeros
	//realizar un Mientras, num sea diferente de 0:
	//Actualizar mayor_ si num es mayor que mayor_.
	//Actualizar menor_ si num es menor que menor_.
	//Leer num.
	//Salida: Mayor número y menor número de la secuencia.
	Definir mayor_, menor_, num como Entero  // Se definen las variables mayor_, menor_ y num como enteros
	mayor_ <- -9999999  // Se inicializa la variable mayor_ con un valor muy pequeño
	menor_ <- 9999999  // Se inicializa la variable menor_ con un valor muy grande
	Escribir "Ingrese una secuencia de números (terminada en 0):"  // Se solicita al usuario ingresar una secuencia de números, se espera que la secuencia termine en 0
	Leer num  // Se lee el primer número de la secuencia y se almacena en la variable num
	mientras num <> 0 Hacer  // Se inicia un bucle mientras num sea diferente de 0
		Si num > mayor_ Entonces  // Si el número leído es mayor que el valor almacenado en mayor_
			mayor_ <- num  // Se actualiza el valor de mayor_ con el número leído
		FinSi
		
		Si num < menor_ Entonces  // Si el número leído es menor que el valor almacenado en menor_
			menor_ <- num  // Se actualiza el valor de menor_ con el número leído
		FinSi
		
		Leer num  // Se lee el siguiente número de la secuencia y se almacena en la variable num
	FinMientras
	Escribir "El número mayor es:", mayor_  // Se muestra en pantalla el número mayor de la secuencia
	Escribir "El número menor es:", menor_  // Se muestra en pantalla el número menor de la secuencia

FinFuncion


funcion edad_peso_estatura()//11
	
	//Bosquejo
	//Entrada: Edad de las personas (entero), ingresada una a una. Se termina la entrada cuando se ingresa el valor cero.
	//Proceso: Inicializar variables para sumar las edades, los pesos, las estaturas y los contadores.
	//Leer la edad de una persona.
	//Realizar Mientras la edad sea diferente de cero; Leer el peso y la estatura de la persona.
	//Actualizar las sumas acumulativas de edad, peso y estatura;Incrementar el contador en uno.
	//Verificar si la edad está entre 18 y 25 años y, de ser así, incrementar el contador correspondiente.
	//Verificar si la edad es mayor a 36 años y, de ser así, incrementar el contador correspondiente.
	//Verificar si la edad está entre 18 y 35 años y, de ser así, sumar el peso al acumulador correspondiente.
	//Leer la edad de la siguiente persona.
	//Salida: Imprimir resultados que pide el Ejercicio
	
	// Definir las variables
    Definir edad, pes, estatura, sumaEdad, sumaPeso, sumaEstatura, contador, contador18a25, contadorMayor36, sumaPeso18a35 Como Entero
    Definir promedioEdad, promedioPeso, promedioEstatura, promedioPeso18a35 Como Real
	// Inicialización de variables
    sumaEdad <- 0
    sumaPeso <- 0
    sumaEstatura <- 0
    contador <- 0
    contador18a25 <- 0
    contadorMayor36 <- 0
    sumaPeso18a35 <- 0
	
    Escribir "Ingrese edad (0 para terminar):"
    Leer edad
	// Lectura de datos y cálculo de sumas y contadores
    Mientras edad <> 0 Hacer //Mientras la edad sea diferente de cero
        Escribir "Ingrese peso:" 
        Leer pes
		
        Escribir "Ingrese estatura:"
        Leer estatura
		
        sumaEdad <- sumaEdad + edad
        sumaPeso <- sumaPeso + pes
        sumaEstatura <- sumaEstatura + estatura
        contador <- contador + 1
		
        Si edad >= 18 Y edad <= 25 Entonces
            contador18a25 <- contador18a25 + 1
        FinSi
		
        Si edad > 36 Entonces
            contadorMayor36 <- contadorMayor36 + 1
        FinSi
		
        Si edad >= 18 Y edad <= 35 Entonces
            sumaPeso18a35 <- sumaPeso18a35 + pes
        FinSi
		
        Escribir "Ingrese edad (0 para terminar):"
        Leer edad
    FinMientras
	// Cálculo de promedios y resultados
    Si contador > 0 Entonces
        promedioEdad <- sumaEdad / contador
        promedioPeso <- sumaPeso / contador
        promedioEstatura <- sumaEstatura / contador
        promedioPeso18a35 <- sumaPeso18a35 / contador18a25
		
        Escribir "Edad promedio: ", promedioEdad
        Escribir "Peso promedio: ", promedioPeso
        Escribir "Estatura promedio: ", promedioEstatura
        Escribir "Personas con edad entre 18 y 25 años: ", contador18a25
        Escribir "Personas mayores a 36 años: ", contadorMayor36
        Escribir "Promedio de peso de personas con edades entre 18 y 35 años: ", promedioPeso18a35
    Sino
        Escribir "No se ingresaron datos."
    FinSi


FinFuncion


funcion tabla_multiplicar()//12
	
	//Bosquejo
	//Entrada: Se muestra el mensaje "Tabla de multiplicar" para indicar al usuario que se mostrarán las tablas.
	//Proceso: Aquí se encuentra el bucle principal que controla el multiplicador y el bucle interno que controla el multiplicando. Dentro de este proceso, se realiza el cálculo de la multiplicación y se muestra cada resultado.
	//Salida: No hay una sección específica de salida en este algoritmo, ya que los resultados se imprimen en el proceso
	
	Definir multiplicador, multiplicando, resultado como Entero  // Definición de variables enteras
	Escribir "Tabla de multiplicar"  // Muestra un mensaje en pantalla
	Para multiplicador <- 1 hasta 10 hacer  // Bucle externo para controlar el multiplicador
		Escribir "Tabla del ", multiplicador  // Muestra el encabezado de la tabla
		Para multiplicando <- 1 hasta 10 hacer  // Bucle interno para controlar el multiplicando
			resultado <- multiplicador * multiplicando  // Cálculo de la multiplicación
			Escribir multiplicador, " x ", multiplicando, " = ", resultado  // Muestra la operación y el resultado
		FinPara
		Escribir "--------------------------"  // Separador entre tablas
	FinPara	
FinFuncion


funcion suma_sucesiva()//13
	//Ejercicio 13.
	//Escribir un algoritmo que multiplique dos números por medio de sumas sucesivas.
	
	//Escribir un algoritmo que multiplique dos números por medio de sumas sucesivas.
	//Entrada: se solicita al usuario que ingrese el multiplicando y el multiplicador
	//Luego, se inicializa la variable(Resulado) en 0.
	//Proceso : se utiliza un bucle (Para)  sumar el valor del multiplicando a la variable (resultado).
	//Salida:se muestra el resultado de la multiplicación utilizando 
	//el valor almacenado en la variable (resultado)
	
    Definir multiplicando, multiplicador, resultado,contador como Entero
	
    Escribir "Ingrese el multiplicando:"
    Leer multiplicando
	
    Escribir "Ingrese el multiplicador:"
    Leer multiplicador
	contador =0
    resultado <- 0
	
    Para contador <- 1 Hasta multiplicador Con Paso 1 Hacer
        resultado <- resultado + multiplicando
    Fin Para
	
    Escribir "El resultado de la multiplicación es:", resultado
FinFuncion


funcion calcular_promedio()//14
	//ejercicio14
    Definir numero, suma, contador,promedio como Real
    suma <- 0
    contador <- 0
	promedio=0
    Escribir "Ingrese los números de la serie (ingrese 0 para terminar):"
    Leer numero
	Mientras numero <> 0 Hacer
		suma <- suma + numero
		contador <- contador + 1
		Leer numero
	FinMientras	
	Si contador>0 Entonces
		promedio <- suma / contador
		escribir"el promedio de la serie es :",promedio
	SiNo
		Escribir "No se ingresaron números en la serie."
	Fin Si
FinFuncion



funcion division_restas_sucesiva()//15
	Definir dividendo, divisor, cociente, resta como Entero
	
    Escribir "Ingrese el dividendo:"
    Leer dividendo
	
    Escribir "Ingrese el divisor:"
    Leer divisor
	
    cociente <- 0
    resta <- dividendo
	Mientras  resta >= divisor Hacer
		resta <- resta - divisor
		cociente <- cociente + 1
	Fin Mientras
	
	Escribir "El cociente de la división es:", cociente
	Escribir "El residuo de la división es:", resta
FinFuncion







// Algoritmo principal del proyecto
Algoritmo Proyecto
	Definir menuPrincipal,Estructuraselectivas,Estrucutracondicionales,Estructurasiterativas,titulo,titulo2,opc,opcn,apcc,apca Como Caracter
	Definir pos,lim Como Entero
	Dimension menuPrincipal[4],Estructuraselectivas[11],Estrucutracondicionales[11],Estructurasiterativas[16]
	// Arreglo menu principal
	menuPrincipal[0] = "  1)Estructura Selectivas"
	menuPrincipal[1] = "  2)Estrucutras condicionales"
	menuPrincipal[2] = "  3)Estructuras Iterativas"
	menuPrincipal[3] = "  4)Salir"
	
	
	Estructuraselectivas[0] = "  1)¿Siguiendo la prioridad de operadores, convierta a expresión matemática,"
	Estructuraselectivas[1] = "  2)Dados dos (2) números calcule la suma, resta, multiplicación, división y módulo."
	Estructuraselectivas[2] = "  3)Dados tres (3) números, Hacer una aplicación que calcule la resolvente."
	Estructuraselectivas[3] = "  4)Dados dos (2) lados de un triángulo en cm, calcular la hipotenusa del mismo"
	Estructuraselectivas[4] = "  5)Dado un (1) número, imprimir 0 si es par y 1 si es impar"
	Estructuraselectivas[5] = "  6)Dado un (1) número binario de cuatro (4) dígitos imprimir su valor"
	Estructuraselectivas[6] = "  7)Dado un (1) número de cuatro (4) dígitos imprimirlo por separado en unidades,decenas,centenas" 
	Estructuraselectivas[7] = "  8) dado un caracter indicar si es un digito o una consonante o un caracter"
	Estructuraselectivas[8] = "  9)Dado dos caracteres indicar si el primer carácter es igual, mayor o menor que el segundo"
	Estructuraselectivas[9] = "  10)Dada una frase cualquiera presentarla en mayúscula y minuscula"
	Estructuraselectivas[10]= "  11)Salir"
	
	
    Estrucutracondicionales[0] = "  1)Todos los años que se dividen exactamente entre 400, o que son divisibles exactamente"
	Estrucutracondicionales[1] = "  2) Dado un número entero cuya cantidad de dígitos es igual a 5, determine si escapicúa."
	Estrucutracondicionales[2] = "  3)Para un valor entero positivo que representa una cantidad en segundos, indicarsu"
	Estrucutracondicionales[3] = "  4)Dados tres números enteros positivos A, B y C, ¿Determine si son iguales? ¿cuál de ellos es mayor y el segundo mayor "
	Estrucutracondicionales[4] = "  5)En un estacionamiento el monto a pagar se calcula multiplicando el número dehoras que"
	Estrucutracondicionales[5] = "  6)El IMC resulta de la división de la masa del individuo (en kilogramos) entre el cuadrado de"
	Estrucutracondicionales[6] = "  7)Escriba un algoritmo que reciba una fecha (día y mes) correspondiente al año2014"
	Estrucutracondicionales[7] = "  8)Solicitar un número entre el 1 y el 12 e imprimir el mes correspondiente a dicho número."
	Estrucutracondicionales[8] = "  9)En un almacén se hace un 20% de descuento a los clientes cuya compra supere los $1000, "
	Estrucutracondicionales[9] = "  10)Dado dos números y un operador matemático(+,-,*,/,mod,div) realizar la suma, resta"
	Estrucutracondicionales[10] = "  11)Salir"
	
	
	
	Estructurasiterativas[0]= "1)Dado un número entero N, calcular e informar al usuario cuántos dígitos tiene dicho numero"
	Estructurasiterativas[1]= "2)Dado un número, determine si es capicúa."
    Estructurasiterativas[2]= "3)Escribir un algoritmo que presente los divisores de un numero"
	Estructurasiterativas[3]= "4)Escribir un algoritmo que presente la suma de los divisores de un numero"
	Estructurasiterativas[4]= "5)Escribir un algoritmo que presente la cantidad de los divisores de un numero"
	Estructurasiterativas[5]= "6)Escribir un algoritmo que indique si un número es perfecto"
	Estructurasiterativas[6]= "7) Dado un número N determinar si es un número primo"
	Estructurasiterativas[7]= "8)Construya un programa que dado un valor entero N, haga el cálculo de la función factoria"
	Estructurasiterativas[8]= "9)Dado un número entero N que representa una contraseña y asumiendo que unacontraseña debe tener al menos 10 dígitos para ser segura, d "
	Estructurasiterativas[9]= "10)Dada una secuencia de números terminada en cero (0), elaborar un algoritmo que informe"
	Estructurasiterativas[10]="11)Se tiene una secuencia de enteros terminada en cero, que corresponde a la edad, peso y "
	Estructurasiterativas[11]="12)Construye un algoritmo que calcule e imprima la tabla de multiplicar, desde la tabla del 1hasta la del 10."
	Estructurasiterativas[12]="13)Escribir un algoritmo que multiplique dos números por medio de sumas sucesivas."
	Estructurasiterativas[13]="14)Dados N número positivos (N>1) calcular el promedio de esta serie"
	Estructurasiterativas[14]="15)Escribir un algoritmo que divida dos números por medio de restas sucesivas"
	Estructurasiterativas[15]="16) salir"
	opc=""
    Mientras opc <> "4" Hacer
		Borrar Pantalla
		opc=presentarMenu("Menu Principal",menuPrincipal,4)
		Segun opc Hacer
			"1":
				opcn=""
				Mientras opcn <> "11" Hacer         
					opcn=presentarMenu("Estructuraselectivas",Estructuraselectivas,11)
					Segun opcn Hacer
						"1":
							Escribir "ejercicio 1"
							convierta_expresion()
							Esperar 3 Segundos
							
						"2":
							Escribir "Ejercicio 2"
							calcula_operaciones()
							Esperar 3 Segundos
						"3":
							escribir"ejercicio 3"
							calcule_la_resolvente()
							esperar 3 segundos
						"4":
							escribir"ejercicio 4"
							calcular_hipotenusa()
							esperar 3 segundos 
						"5":
							Escribir "ejercicio 5"
							par_impar()
							esperar 3 segundos
							
						"6":
							escribir "ejercicio 6"
							imprimir_valor_binario()
							esperar 3 segundos
							
						"7":
							escribir"ejercicio 7"
							imprimir_cantidades()
							esperar 3 Segundos
							
						"8":
							escribir"ejercicio 8 "
							verificar_caracter()
							esperar 3 Segundos
							
						"9":
							escribir"ejercicio 9"
							verificar_caracter_mayor()
							esperar 3 segundos 
							
						"10":
							escribir "ejercicio 10"
							presentar_mayuscula_minuscula()
							esperar 3 segundos 
						"11":
							Escribir "Regresando al Menu Principal"
							Esperar 3 Segundos
						De Otro Modo:
							Escribir "Opcion invalida..."
							Esperar 3 Segundos
					Fin Segun
					
				FinMientras
				
				
			"2":
				
				Escribir "Estructuras Condicionales"
				Esperar 3 Segundos
				opcn=""
				Mientras opcn <> "11" Hacer         
					opcn=presentarMenu("Estructuras condicionales",Estrucutracondicionales,11)
					Segun opcn Hacer
						"1":
							Escribir "ejercicio 1"
							año_bisiesto()
							Esperar 3 Segundos
							
						"2":
							Escribir "Ejercicio 2"
							escapicua()
							Esperar 3 Segundos
						"3":
							escribir"ejercicio 3"
							equivalente_minutos()
							esperar 3 segundos
							
						"4":
							escribir"ejercicio 4"
							determinar_son_iguales()
							esperar 3 segundos 
						"5":
							Escribir "ejercicio 5"
							montoa_pagar()
							esperar 3 segundos
							
						"6":
							escribir "ejercicio 6"
							peso()
							esperar 3 segundos
							
						"7":
							escribir"ejercicio 7"
							año_2014()
							esperar 3 Segundos
							
						"8":
							escribir"ejercicio 8 "
							mes_correspondiente()
							esperar 3 Segundos
							
						"9":
							escribir"ejercicio 9"
							almacen_descuento()
							esperar 3 segundos 
							
						"10":
							escribir "ejercicio 10"
							operador_matematica()
							esperar 3 segundos 
						"11":
							Escribir "Regresando al Menu Principal"
							Esperar 3 Segundos
						De Otro Modo:
							Escribir "Opcion invalida..."
							Esperar 3 Segundos
					Fin Segun
					
				FinMientras
			
				
				esperar 3 segundos 
			"3":
				
				Escribir "Estructuras iterativas"
				Esperar 3 Segundos
				opcn=""
				Mientras opcn <> "11" Hacer         
					opcn=presentarMenu("Estructuras iterativa",Estructurasiterativas,16)
					Segun opcn Hacer
						"1":
							Escribir "ejercicio 1"
							calcular_digito()
							Esperar 3 Segundos
							
							
						"2":
							Escribir "Ejercicio 2"
							determinar_capicua()
							Esperar 3 Segundos
							
						"3":
							escribir"ejercicio 3"
							divisores_numero()
							esperar 3 segundos
						"4":
							escribir"ejercicio 4"
							suma_divisores()
							esperar 3 segundos 
						"5":
							Escribir "ejercicio 5"
							cantidad_divisores()
							esperar 3 segundos
							
						"6":
							escribir "ejercicio 6"
							numero_perfecto()
							esperar 3 segundos
							
						"7":
							escribir"ejercicio 7"
							numero_primo()
							esperar 3 Segundos
							
						"8":
							escribir"ejercicio 8 "
							n_factorial()
							esperar 3 Segundos
							
						"9":
							escribir"ejercicio 9"
							representar_contraseña()
							esperar 3 segundos 
							
						"10":
							escribir "ejercicio 10"
							numero_terminada_0()
							esperar 3 segundos 
							
						"11":
							Escribir "ejercicio 11"
							edad_peso_estatura()
							Esperar 3 Segundos
							
						"12":
							Escribir "ejercicio 12 "
							tabla_multiplicar()
							esperar 3 segundo 
							
							
						"13":
							escribir"ejercicio 13"
							suma_sucesiva()
							Esperar 3 segundos 
							
						"14":
							escribir "ejercicio 14"
							calcular_promedio()
							esperar 3 segundos 
							
						"15":
							Escribir "ejercicio 15"
							division_restas_sucesiva()
							Esperar 3 Segundos
							
							
						"16":
							escribir "regresando al menu principal"
							esperar 3 segundos 
						De Otro Modo:
							escribir "  opcion invalida "
					Fin Segun
				FinMientras
				
			"4":
				Escribir "Gracias por usar el Sistema "
				Esperar 3 Segundos
		Fin Segun
    Fin Mientras
	
FinAlgoritmo
